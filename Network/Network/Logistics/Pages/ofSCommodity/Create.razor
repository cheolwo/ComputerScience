<MatDialog IsOpen="CreateDialogIsOpen">
    <MatDialogContent>
        <MatDialogTitle>상품등록</MatDialogTitle>
        <MatDivider></MatDivider>
        <EditForm EditContext="EditContext" OnValidSubmit="Success">
            <DataAnnotationsValidator />
            <div class="mat-layout-grid-cell mat-layout-grid-cell-span-4">
                <p>
                    <MatTextField Label="Name" @bind-Value="@commodity.Name"></MatTextField>
                    <ValidationMessage For="@(() =>commodity.Name)" />
                </p>
                <p>
                    <MatTextField Label="Category" @bind-Value="@commodity.Category"></MatTextField>
                </p>
                <p>
                    <MatTextField Label="Url" @bind-Value="@commodity.Url"></MatTextField>
                </p>     
                <p><MatFileUpload OnChange="UploadToBuffer"></MatFileUpload></p>
            </div>
            <MatButton Type="submit" OnClick="Add" Raised="true">등록</MatButton>
            <MatButton OnClick="DialogSwitch" Raised="true">취소</MatButton>
        </EditForm>
    </MatDialogContent>
</MatDialog>

<p>@ErrorMessage</p>

@if (MatFile != null)
{
    <p>Name : @MatFile.Name</p>
    <p>Size in Bytes :: @MatFile.Size</p>
    <p>File type:@MatFile.Type</p>
}

@code{
    [Inject]
    IJSRuntime JS { get; set; }

    async Task Success() =>
        await JS.InvokeAsync<object>
    ("alert", "Comodity Add!");
    
}



