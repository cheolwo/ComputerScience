// <auto-generated />
using System;
using Market;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Market.Migrations
{
    [DbContext(typeof(SCommodityDataContext))]
    partial class SCommodityDataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.12")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Market.Model.ofSCommodity.DetailImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DetailofSCommodityId")
                        .HasColumnType("int");

                    b.Property<string>("ImageRoute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DetailofSCommodityId");

                    b.ToTable("DetailImages");
                });

            modelBuilder.Entity("Market.Model.ofSCommodity.DetailofSCommodity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Authenticate")
                        .HasColumnType("int");

                    b.Property<string>("Brand")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CommodityNo")
                        .HasColumnType("int");

                    b.Property<int>("DurationTime")
                        .HasColumnType("int");

                    b.Property<int>("Import")
                        .HasColumnType("int");

                    b.Property<bool>("IsVAT")
                        .HasColumnType("bit");

                    b.Property<int>("MaximumPossibleQuantity")
                        .HasColumnType("int");

                    b.Property<string>("Menufactured")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PossibleUnder20")
                        .HasColumnType("bit");

                    b.Property<string>("WarehouseCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("WarehouseNo")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommodityNo")
                        .IsUnique();

                    b.ToTable("DetailsofCommodity");
                });

            modelBuilder.Entity("Market.Model.ofSCommodity.Doc", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("DetailofSCommodityId")
                        .HasColumnType("int");

                    b.Property<string>("DocRoute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NameofDoc")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("DetailofSCommodityId");

                    b.ToTable("Docs");
                });

            modelBuilder.Entity("Market.Model.ofSCommodity.ImageofDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageRoute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ImageofOptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ImageofOptionId");

                    b.ToTable("ImageofDetails");
                });

            modelBuilder.Entity("Market.Model.ofSCommodity.ImageofOption", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ImageRoute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OptionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OptionId");

                    b.ToTable("ImageofOptions");
                });

            modelBuilder.Entity("Market.Model.ofSCommodity.Option", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Key")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SCommodityId")
                        .HasColumnType("int");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("SCommodityId");

                    b.ToTable("Options");
                });

            modelBuilder.Entity("Market.Model.ofSCommodity.SCommodity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Category")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageRoute")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageTitle")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Url")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SCommodities");
                });

            modelBuilder.Entity("Market.Model.ofSCommodity.DetailImage", b =>
                {
                    b.HasOne("Market.Model.ofSCommodity.DetailofSCommodity", "DetailofSCommodity")
                        .WithMany("DetailImages")
                        .HasForeignKey("DetailofSCommodityId");
                });

            modelBuilder.Entity("Market.Model.ofSCommodity.DetailofSCommodity", b =>
                {
                    b.HasOne("Market.Model.ofSCommodity.SCommodity", "SCommodity")
                        .WithOne("DetailofSCommodity")
                        .HasForeignKey("Market.Model.ofSCommodity.DetailofSCommodity", "CommodityNo")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Market.Model.ofSCommodity.Doc", b =>
                {
                    b.HasOne("Market.Model.ofSCommodity.DetailofSCommodity", "DetailofSCommodity")
                        .WithMany("Docs")
                        .HasForeignKey("DetailofSCommodityId");
                });

            modelBuilder.Entity("Market.Model.ofSCommodity.ImageofDetail", b =>
                {
                    b.HasOne("Market.Model.ofSCommodity.ImageofOption", "ImageofOption")
                        .WithMany("ImagesofDetail")
                        .HasForeignKey("ImageofOptionId");
                });

            modelBuilder.Entity("Market.Model.ofSCommodity.ImageofOption", b =>
                {
                    b.HasOne("Market.Model.ofSCommodity.Option", "Option")
                        .WithMany("Images")
                        .HasForeignKey("OptionId");
                });

            modelBuilder.Entity("Market.Model.ofSCommodity.Option", b =>
                {
                    b.HasOne("Market.Model.ofSCommodity.SCommodity", "SCommodity")
                        .WithMany("Options")
                        .HasForeignKey("SCommodityId");
                });
#pragma warning restore 612, 618
        }
    }
}
